version: '3.8'
services:
  postgres:
    image: postgres:15
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: samet123
      POSTGRES_DB: db_image
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://185.136.206.146:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.9.0
    container_name: elasticsearch
    environment:
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    ports:
      - "9200:9200"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536

  kibana:
    image: docker.elastic.co/kibana/kibana:8.9.0
    container_name: kibana
    environment:
      XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY: d1a66dfd-c4d3-4a0a-8290-2abcb83ab3aa
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch

  logstash:
    image: docker.elastic.co/logstash/logstash:8.9.0
    container_name: logstash
    ports:
      - "5044:5044"
      - "5000:5000/tcp"
      - "5000:5000/udp"
      - "9600:9600"
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    depends_on:
      - elasticsearch

  keycloak:
    image: quay.io/keycloak/keycloak:22.0.1
    container_name: keycloak
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_DB_URL_PORT: 5432
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: samet123
      KC_DB_URL_DATABASE: db_keycloak
      KC_HOSTNAME: 185.136.206.146:8081
      KC_PROXY: edge
      KC_HTTP_RELATIVE_PATH: /auth
      KC_TRANSACTION_XA_ENABLED: false
      KEYCLOAK_LOG_LEVEL: ALL
    ports:
      - "8081:8080"
    depends_on:
      - postgres
    command: start-dev


  app:
    image: sametklou1907/image-minifier-main:latest
    container_name: main-minifier
    ports:
      - "8085:8085"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/db_image
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: samet123
      SPRING_JPA_HIBERNATE_DDL_AUTO: create
      SPRING_JPA_PROPERTIES_HIBERNATE_DIALECT: org.hibernate.dialect.PostgreSQLDialect
      LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_WEB: DEBUG
      LOGGING_LEVEL_ORG_HIBERNATE: ERROR
      LOGGING_FILE_NAME: /logs/image-minifier.log
      LOGGING_FILE_MAX_SIZE: 10MB
      LOGGING_FILE_MAX_HISTORY: 10
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: 6379
      SPRING_HTTP_LOG_REQUEST_DETAILS: "true"
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      SPRING_KAFKA_CONSUMER_GROUP_ID: group_id
      SPRING_SERVLET_MULTIPART_MAX_FILE_SIZE: 10MB
      SPRING_SERVLET_MULTIPART_MAX_REQUEST_SIZE: 10MB
      APP_SUPPORTED_EXTENSIONS: png,jpg,jpeg
      ELK_LOGSTASH_SERVER: 185.136.206.146
      ELK_LOGSTASH_PORT: 5000
      ELK_ENABLE: "true"
      APP_LOG_IDENTIFIER: image-minifier-main
      KEYCLOAK_REALM: minifier
      KEYCLOAK_AUTH_SERVER_URL: http://185.136.206.146:8081/auth
      KEYCLOAK_RESOURCE: admin-cli
      KEYCLOAK_CREDENTIALS_SECRET: TRXOHE4LbDRHtgoPMxVFBqBvT2dwhCZy
      KEYCLOAK_GRANT_TYPE: client_credentials
    depends_on:
      - postgres
      - redis
      - kafka
    volumes:
      - ./logs:/logs


  kafka-consumer:
    image: consumer-kafka
    container_name: kafka-consumer
    depends_on:
      - app

volumes:
  postgres_data:
